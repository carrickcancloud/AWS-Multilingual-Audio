name: Deploy Infrastructure

on:
  push:
    branches:
      - main
      - beta

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.0

      - name: Set Deployment Flag
        run: |
          echo "DEPLOY_RESOURCES=true" >> $GITHUB_ENV

      - name: Set up Python
        uses: actions/setup-python@v5.6.0
        with:
          python-version: '3.13.5'

      - name: Check if S3 bucket exists
        id: check_bucket
        run: |
          BUCKET_NAME=${{ secrets.S3_BUCKET_LAMBDAS }}
          if aws s3api head-bucket --bucket $BUCKET_NAME 2>/dev/null; then
            echo "Bucket exists."
            echo "exists=true" >> $GITHUB_ENV
          else
            echo "Bucket does not exist. Creating bucket."
            if [ "${{ secrets.AWS_REGION }}" == "us-east-1" ]; then
              aws s3api create-bucket --bucket $BUCKET_NAME --region ${{ secrets.AWS_REGION }}
            else
              aws s3api create-bucket --bucket $BUCKET_NAME --region ${{ secrets.AWS_REGION }} --create-bucket-configuration LocationConstraint=${{ secrets.AWS_REGION }}
            fi
            echo "exists=false" >> $GITHUB_ENV
          fi
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}

      - name: Package Lambda functions
        run: |
          cd lambda
          zip -r transcribe.zip transcribe.py
          zip -r translate.zip translate.py
          zip -r synthesize.zip synthesize.py

      - name: Upload Lambda packages to S3
        run: |
          BUCKET_NAME=${{ secrets.S3_BUCKET_LAMBDAS }}
          APPNAME_AS_PREFIX="speakeasy/"
          for file in lambda/*.zip; do
            aws s3 cp "$file" s3://$BUCKET_NAME/$APPNAME_AS_PREFIX
          done
          echo "Uploaded all Lambda packages to s3://$BUCKET_NAME/$APPNAME_AS_PREFIX"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}

      - name: Check if CloudFormation stack exists
        id: check_stack
        run: |
          if [ "${{ github.ref }}" == "refs/heads/beta" ]; then
            STACK_NAME="AcmeLabsSpeakEasy-beta"
          else
            STACK_NAME="AcmeLabsSpeakEasy-prod"
          fi
          if aws cloudformation describe-stacks --stack-name $STACK_NAME 2>/dev/null; then
            echo "Stack $STACK_NAME exists. Skipping deployment."
            echo "DEPLOY_STACK=false" >> $GITHUB_ENV
          else
            echo "Stack $STACK_NAME does not exist. Proceeding to deployment."
            echo "DEPLOY_STACK=true" >> $GITHUB_ENV
          fi
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}

      - name: Deploy CloudFormation
        if: env.DEPLOY_STACK == 'true' && env.DEPLOY_RESOURCES == 'true'
        run: |
          if [ "${{ github.ref }}" == "refs/heads/beta" ]; then
            ENVIRONMENT="beta"
          else
            ENVIRONMENT="prod"
          fi

          aws cloudformation deploy \
            --template-file cloudformation/template.yaml \
            --stack-name $STACK_NAME \
            --parameter-overrides Environment=$ENVIRONMENT \
            --capabilities CAPABILITY_NAMED_IAM
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}

