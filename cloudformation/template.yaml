AWSTemplateFormatVersion: '2010-09-09'
Description: AcmeLabs SpeakEasy Audio Processing

Parameters:
  Environment:
    Type: String
    AllowedValues:
      - beta
      - prod
    Description: Environment for deployment (beta or prod)

  LambdaCodeBucket:
    Type: String
    Default: acmelabs-lambdas
    Description: The S3 bucket where Lambda function code is stored

  AudioBucketName:
    Type: String
    Default: acmelabs-speakeasy
    Description: The name of the audio S3 bucket (e.g., acmelabs-speakeasy-${Environment})

  TriggerFunctionName:
    Type: String
    Default: acmelabs-speakeasy-trigger
    Description: The name of the Upload Trigger Lambda function

  TranscribeFunctionName:
    Type: String
    Default: acmelabs-speakeasy-transcribe
    Description: The name of the Transcribe Lambda function

  TranscribeStatusFunctionName:
    Type: String
    Default: acmelabs-speakeasy-transcription-status
    Description: The name of the Transcribe Lambda function

  TranslateFunctionName:
    Type: String
    Default: acmelabs-speakeasy-translate
    Description: The name of the Translate Lambda function

  TranslateStatusFunctionName:
    Type: String
    Default: acmelabs-speakeasy-translation-status
    Description: The name of the Translate Lambda function

  SynthesizeFunctionName:
    Type: String
    Default: acmelabs-speakeasy-synthesize
    Description: The name of the Synthesize Lambda function

  SynthesizeStatusFunctionName:
    Type: String
    Default: acmelabs-speakeasy-synthesis-status
    Description: The name of the Synthesize Lambda function

  TriggerFunctionS3Key:
    Type: String
    Default: speakeasy/trigger.zip
    Description: The prefix for the Upload Trigger Lambda function code files in the S3 bucket

  TranscribeFunctionS3Key:
    Type: String
    Default: speakeasy/transcribe.zip
    Description: The prefix for the Lambda function code files in the S3 bucket

  TranscribeStatusFunctionS3Key:
    Type: String
    Default: speakeasy/status_transcription.zip
    Description: The prefix for the Lambda function code files in the S3 bucket

  TranslateFunctionS3Key:
    Type: String
    Default: speakeasy/translate.zip
    Description: The prefix for the Lambda function code files in the S3 bucket

  TranslateStatusFunctionS3Key:
    Type: String
    Default: speakeasy/status_translation.zip
    Description: The prefix for the Lambda function code files in the S3 bucket

  SynthesizeFunctionS3Key:
    Type: String
    Default: speakeasy/synthesize.zip
    Description: The prefix for the Lambda function code files in the S3 bucket

  SynthesizeStatusFunctionS3Key:
    Type: String
    Default: speakeasy/status_synthesis.zip
    Description: The prefix for the Lambda function code files in the S3 bucket

  AudioProcessingStateMachineName:
    Type: String
    Default: acmelabs-speakeasy-audio-processing-state-machine
    Description: The name of the Audio Processing Step Functions state machine

  StepFunctionsRoleName:
    Type: String
    Default: acmelabs-speakeasy-step-functions-role
    Description: The name of the Step Functions IAM role

  LambdaExecutionRoleName:
    Type: String
    Default: acmelabs-speakeasy-lambda-execution-role
    Description: The name of the Lambda Execution IAM role

  TriggerHandler:
    Type: String
    Default: trigger.lambda_handler
    Description: The handler for the Upload Trigger Lambda function

  TranscribeHandler:
    Type: String
    Default: transcribe.lambda_handler
    Description: The handler for the Transcribe Lambda function

  TranslateHandler:
    Type: String
    Default: translate.lambda_handler
    Description: The handler for the Translate Lambda function

  SynthesizeHandler:
    Type: String
    Default: synthesize.lambda_handler
    Description: The handler for the Synthesize Lambda function

Resources:
  AudioBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "${AudioBucketName}-${Environment}"
      LifecycleConfiguration:
        Rules:
          - Id: ExpireOldOutputs
            Status: Enabled
            ExpirationInDays: 30
      Tags:
        - Key: Name
          Value: acmelabs-speakeasy-bucket

  TriggerFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub "${TriggerFunctionName}-${Environment}"
      Handler: !Ref TriggerHandler
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        S3Bucket: !Ref LambdaCodeBucket
        S3Key: !Ref TriggerFunctionS3Key
      Runtime: python3.13
      Environment:
        Variables:
          STATE_MACHINE_ARN: !GetAtt AudioProcessingStateMachine.Arn
      Tags:
        - Key: Name
          Value: !Sub "${TriggerFunctionName}-${Environment}"

  TranscribeFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub "${TranscribeFunctionName}-${Environment}"
      Handler: !Ref TranscribeHandler
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        S3Bucket: !Ref LambdaCodeBucket
        S3Key: !Ref TranscribeFunctionS3Key
      Runtime: python3.13
      Environment:
        Variables:
          S3_BUCKET: !Sub ${AudioBucketName}-${Environment}
      Tags:
        - Key: Name
          Value: !Sub "${TranscribeFunctionName}-${Environment}"

  TranscribeStatusFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub "${TranscribeStatusFunctionName}-${Environment}"
      Handler: !Ref TranscribeHandler
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        S3Bucket: !Ref LambdaCodeBucket
        S3Key: !Ref TranscribeStatusFunctionS3Key
      Runtime: python3.13
      Environment:
        Variables:
          S3_BUCKET: !Sub ${AudioBucketName}-${Environment}
      Tags:
        - Key: Name
          Value: !Sub "${TranscribeStatusFunctionName}-${Environment}"

  TranslateFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub "${TranslateFunctionName}-${Environment}"
      Handler: !Ref TranslateHandler
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        S3Bucket: !Ref LambdaCodeBucket
        S3Key: !Ref TranslateFunctionS3Key
      Runtime: python3.13
      Environment:
        Variables:
          S3_BUCKET: !Sub ${AudioBucketName}-${Environment}
          TARGET_LANGUAGE: 'es'
      Tags:
        - Key: Name
          Value: !Sub "${TranslateFunctionName}-${Environment}"

  TranslateStatusFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub "${TranslateStatusFunctionName}-${Environment}"
      Handler: !Ref TranslateHandler
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        S3Bucket: !Ref LambdaCodeBucket
        S3Key: !Ref TranslateStatusFunctionS3Key
      Runtime: python3.13
      Environment:
        Variables:
          S3_BUCKET: !Sub ${AudioBucketName}-${Environment}
      Tags:
        - Key: Name
          Value: !Sub "${TranslateStatusFunctionName}-${Environment}"

  SynthesizeFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub "${SynthesizeFunctionName}-${Environment}"
      Handler: !Ref SynthesizeHandler
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        S3Bucket: !Ref LambdaCodeBucket
        S3Key: !Ref SynthesizeFunctionS3Key
      Runtime: python3.13
      Environment:
        Variables:
          S3_BUCKET: !Sub ${AudioBucketName}-${Environment}
      Tags:
        - Key: Name
          Value: !Sub "${SynthesizeFunctionName}-${Environment}"

  SynthesizeStatusFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub "${SynthesizeStatusFunctionName}-${Environment}"
      Handler: !Ref SynthesizeHandler
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        S3Bucket: !Ref LambdaCodeBucket
        S3Key: !Ref SynthesizeStatusFunctionS3Key
      Runtime: python3.13
      Environment:
        Variables:
          S3_BUCKET: !Sub ${AudioBucketName}-${Environment}
      Tags:
        - Key: Name
          Value: !Sub "${SynthesizeStatusFunctionName}-${Environment}"

  AudioProcessingStateMachine:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      Definition:
        Comment: "Audio Processing State Machine"
        StartAt: "TranscribeAudio"
        States:
          TranscribeAudio:
            Type: Task
            Resource: !Sub "${TranscribeFunction.Arn}"
            Next: "WaitForTranscription"
          WaitForTranscription:
            Type: Wait
            Seconds: 5
            Next: "CheckTranscriptionStatus"
          CheckTranscriptionStatus:
            Type: Task
            Resource: !Sub "${TranscribeStatusFunction.Arn}"
            Next: "IsTranscriptionComplete"
          IsTranscriptionComplete:
            Type: Choice
            Choices:
              - Variable: "$.status"
                StringEquals: "COMPLETED"
                Next: "TranslateText"
              - Variable: "$.status"
                StringEquals: "FAILED"
                Next: "HandleFailure"
            Default: "WaitForTranscription"
          TranslateText:
            Type: Task
            Resource: !Sub "${TranslateFunction.Arn}"
            Next: "WaitForTranslation"
          WaitForTranslation:
            Type: Wait
            Seconds: 5
            Next: "CheckTranslationStatus"
          CheckTranslationStatus:
            Type: Task
            Resource: !Sub "${TranslateStatusFunction.Arn}"
            Next: "IsTranslationComplete"
          IsTranslationComplete:
            Type: Choice
            Choices:
              - Variable: "$.status"
                StringEquals: "COMPLETED"
                Next: "SynthesizeSpeech"
              - Variable: "$.status"
                StringEquals: "FAILED"
                Next: "HandleTranslationFailure"
            Default: "WaitForTranslation"
          SynthesizeSpeech:
            Type: Task
            Resource: !Sub "${SynthesizeFunction.Arn}"
            Next: "WaitForSynthesis"
          WaitForSynthesis:
            Type: Wait
            Seconds: 5
            Next: "CheckSynthesisStatus"
          CheckSynthesisStatus:
            Type: Task
            Resource: !Sub "${SynthesizeStatusFunction.Arn}"
            Next: "IsSynthesisComplete"
          IsSynthesisComplete:
            Type: Choice
            Choices:
              - Variable: "$.status"
                StringEquals: "COMPLETED"
                Next: "Success"
              - Variable: "$.status"
                StringEquals: "FAILED"
                Next: "HandleSynthesisFailure"
            Default: "WaitForSynthesis"
          Success:
            Type: Succeed
          HandleFailure:
            Type: Fail
            Error: "TranscriptionFailed"
            Cause: "The transcription job has failed."
          HandleTranslationFailure:
            Type: Fail
            Error: "TranslationFailed"
            Cause: "The translation job has failed."
          HandleSynthesisFailure:
            Type: Fail
            Error: "SynthesisFailed"
            Cause: "The synthesis job has failed."
      RoleArn: !GetAtt StepFunctionsRole.Arn
      StateMachineName: !Sub "${AudioProcessingStateMachineName}-${Environment}"
      Tags:
        - Key: Name
          Value: !Sub ```yaml
          Value: !Sub "${AudioProcessingStateMachineName}-${Environment}"
      #LoggingConfiguration:
      #  Level: ALL
      #  Destinations:
      #    - CloudWatchLogsLogGroup:
      #        LogGroupArn: !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/vendedlogs/states/${AudioProcessingStateMachineName}-${Environment}/*"

  StepFunctionsRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${StepFunctionsRoleName}-${Environment}"
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: states.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: StepFunctionsPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - lambda:InvokeFunction
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource:
                  - !GetAtt TranscribeFunction.Arn
                  - !GetAtt TranslateFunction.Arn
                  - !GetAtt SynthesizeFunction.Arn
                  - !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/vendedlogs/states/${AudioProcessingStateMachineName}-${Environment}/*'
      Tags:
        - Key: Name
          Value: !Sub "${StepFunctionsRoleName}-${Environment}"

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${LambdaExecutionRoleName}-${Environment}"
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: AudioProcessingPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:ListBucket
                  - transcribe:StartTranscriptionJob
                  - transcribe:GetTranscriptionJob
                  - translate:TranslateText
                  - polly:SynthesizeSpeech
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - states:StartExecution
                Resource:
                  - !Sub 'arn:aws:s3:::${AudioBucket}/audio_inputs/*'
                  - !Sub 'arn:aws:s3:::${AudioBucket}'
                  - !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/${TriggerFunctionName}-${Environment}'
                  - !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/${TranscribeFunctionName}-${Environment}'
                  - !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/${TranscribeStatusFunctionName}-${Environment}'
                  - !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/${TranslateFunctionName}-${Environment}'
                  - !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/${TranslateStatusFunctionName}-${Environment}'
                  - !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/${SynthesizeFunctionName}-${Environment}'
                  - !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/${SynthesizeStatusFunctionName}-${Environment}'
                  - !Sub 'arn:aws:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${AudioProcessingStateMachineName}-${Environment}'
        #- PolicyName: TranscribeExecutionPolicy
        #  PolicyDocument:
        #    Version: '2012-10-17'
        #    Statement:
        #      - Effect: Allow
        #        Action:
        #          - transcribe:StartTranscriptionJob
        #          - transcribe:GetTranscriptionJob
        #        Resource:
        #          - '*'
      Tags:
        - Key: Name
          Value: !Sub "${LambdaExecutionRoleName}-${Environment}"

  S3InvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref TriggerFunction
      Principal: s3.amazonaws.com
      SourceArn: !Sub 'arn:aws:s3:::${AudioBucket}'

Outputs:
  AudioBucketName:
    Value: !Ref AudioBucket
    Description: Name of the audio S3 bucket

  TranscribeFunctionArn:
    Value: !GetAtt TranscribeFunction.Arn
    Description: ARN of the Transcribe Lambda function

  TranscribeStatusFunctionArn:
    Value: !GetAtt TranscribeStatusFunction.Arn
    Description: ARN of the Transcribe Status Lambda function

  TranslateFunctionArn:
    Value: !GetAtt TranslateFunction.Arn
    Description: ARN of the Translate Lambda function

  TranslateStatusFunctionArn:
    Value: !GetAtt TranslateStatusFunction.Arn
    Description: ARN of the Translate Status Lambda function

  SynthesizeFunctionArn:
    Value: !GetAtt SynthesizeFunction.Arn
    Description: ARN of the Synthesize Lambda function

  SynthesizeStatusFunctionArn:
    Value: !GetAtt SynthesizeStatusFunction.Arn
    Description: ARN of the Synthesize Status Lambda function

  StateMachineArn:
    Value: !GetAtt AudioProcessingStateMachine.Arn
    Description: ARN of the audio processing Step Functions state machine

  StepFunctionsRoleArn:
    Value: !GetAtt StepFunctionsRole.Arn
    Description: ARN of the Step Functions role

  LambdaExecutionRoleArn:
    Value: !GetAtt LambdaExecutionRole.Arn
    Description: ARN of the Lambda execution role

  LambdaCodeBucketName:
    Value: !Ref LambdaCodeBucket
    Description: Name of the S3 bucket where Lambda function code is stored
